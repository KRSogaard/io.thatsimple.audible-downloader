// <auto-generated />
using System;
using AudibleDownloader.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AudibleDownloader.Migrations
{
    [DbContext(typeof(AudibleContext))]
    partial class AudibleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Asin")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("asin")
                        .HasColumnOrder(1);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(4);

                    b.Property<string>("Link")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("link")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("authors", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.AuthorsBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int(11)")
                        .HasColumnName("author_id")
                        .HasColumnOrder(1);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AuthorId" }, "author_id");

                    b.HasIndex(new[] { "BookId" }, "book_id");

                    b.ToTable("authors_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("asin")
                        .HasColumnOrder(1);

                    b.Property<string>("AuthorsCache")
                        .HasColumnType("text")
                        .HasColumnName("authors_cache")
                        .HasColumnOrder(13);

                    b.Property<string>("CategoriesCache")
                        .HasColumnType("text")
                        .HasColumnName("categories_cache")
                        .HasColumnOrder(14);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(9);

                    b.Property<bool>("IsTemp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_temp")
                        .HasColumnOrder(16);

                    b.Property<long?>("Isbn")
                        .HasColumnType("bigint")
                        .HasColumnName("isbn")
                        .HasColumnOrder(2);

                    b.Property<int>("LastUpdated")
                        .HasColumnType("int(11)")
                        .HasColumnName("last_updated")
                        .HasColumnOrder(10);

                    b.Property<int?>("Length")
                        .HasColumnType("int(11)")
                        .HasColumnName("length")
                        .HasColumnOrder(4);

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link")
                        .HasColumnOrder(5);

                    b.Property<string>("NarratorsCache")
                        .HasColumnType("text")
                        .HasColumnName("narrators_cache")
                        .HasColumnOrder(11);

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int(11)")
                        .HasColumnName("publisher_id")
                        .HasColumnOrder(8);

                    b.Property<int?>("Released")
                        .HasColumnType("int(11)")
                        .HasColumnName("released")
                        .HasColumnOrder(6);

                    b.Property<bool>("ShouldDownload")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("should_download")
                        .HasColumnOrder(15);

                    b.Property<string>("Summary")
                        .HasColumnType("text")
                        .HasColumnName("summary")
                        .HasColumnOrder(7);

                    b.Property<string>("TagsCache")
                        .HasColumnType("text")
                        .HasColumnName("tags_cache")
                        .HasColumnOrder(12);

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title")
                        .HasColumnOrder(3);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("PublisherId");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.CategoriesBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id")
                        .HasColumnOrder(1);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id")
                        .HasDatabaseName("book_id1");

                    b.HasIndex(new[] { "CategoryId" }, "category_id");

                    b.ToTable("categories_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("link")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Narrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("narrators", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.NarratorsBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<int>("NarratorId")
                        .HasColumnType("int(11)")
                        .HasColumnName("narrator_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id")
                        .HasDatabaseName("book_id2");

                    b.HasIndex(new[] { "NarratorId" }, "narrator_id");

                    b.ToTable("narrators_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("publishers", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Asin")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("asin")
                        .HasColumnOrder(1);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(4);

                    b.Property<int>("LastChecked")
                        .HasColumnType("int(11)")
                        .HasColumnName("last_checked")
                        .HasColumnOrder(6);

                    b.Property<int>("LastUpdated")
                        .HasColumnType("int(11)")
                        .HasColumnName("last_updated")
                        .HasColumnOrder(5);

                    b.Property<string>("Link")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("link")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<bool>("ShouldDownload")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("should_download")
                        .HasColumnOrder(7);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("series", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.SeriesBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<string>("BookNumber")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("book_number")
                        .HasColumnOrder(3);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(5);

                    b.Property<int>("SeriesId")
                        .HasColumnType("int(11)")
                        .HasColumnName("series_id")
                        .HasColumnOrder(1);

                    b.Property<int?>("Sort")
                        .HasMaxLength(64)
                        .HasColumnType("int")
                        .HasColumnName("sort")
                        .HasColumnOrder(4);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id")
                        .HasDatabaseName("book_id3");

                    b.HasIndex(new[] { "SeriesId" }, "series_id");

                    b.ToTable("series_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("tag")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.TagsBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<int>("TagId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tag_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id")
                        .HasDatabaseName("book_id4");

                    b.HasIndex(new[] { "TagId" }, "tag_id");

                    b.ToTable("tags_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(5);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email")
                        .HasColumnOrder(1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("password")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password_salt")
                        .HasColumnOrder(4);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("username")
                        .HasColumnOrder(2);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersArchivedSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<int>("SeriesId")
                        .HasColumnType("int(11)")
                        .HasColumnName("series_id")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SeriesId" }, "series_id")
                        .HasDatabaseName("series_id1");

                    b.HasIndex(new[] { "UserId" }, "user_id");

                    b.ToTable("users_archived_series", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("BookId")
                        .HasColumnType("int(11)")
                        .HasColumnName("book_id")
                        .HasColumnOrder(2);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id")
                        .HasDatabaseName("book_id5");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .HasDatabaseName("user_id1");

                    b.ToTable("users_books", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(4);

                    b.Property<string>("Payload")
                        .HasColumnType("text")
                        .HasColumnName("payload")
                        .HasColumnOrder(3);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("type")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .HasDatabaseName("user_id2");

                    b.ToTable("users_jobs", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<int>("Created")
                        .HasColumnType("int(11)")
                        .HasColumnName("created")
                        .HasColumnOrder(3);

                    b.Property<int>("Expires")
                        .HasColumnType("int(11)")
                        .HasColumnName("expires")
                        .HasColumnOrder(4);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("token")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .HasDatabaseName("user_id3");

                    b.ToTable("users_tokens", (string)null);
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.AuthorsBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Author", "Author")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("authors_books_ibfk_2");

                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("authors_books_ibfk_1");

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Book", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("books_ibfk_1");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.CategoriesBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("CategoriesBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("categories_books_ibfk_1");

                    b.HasOne("AudibleDownloader.DAL.Models.Category", "Category")
                        .WithMany("CategoriesBooks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("categories_books_ibfk_2");

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.NarratorsBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("NarratorsBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("narrators_books_ibfk_1");

                    b.HasOne("AudibleDownloader.DAL.Models.Narrator", "Narrator")
                        .WithMany("NarratorsBooks")
                        .HasForeignKey("NarratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("narrators_books_ibfk_2");

                    b.Navigation("Book");

                    b.Navigation("Narrator");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.SeriesBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("SeriesBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("series_books_ibfk_1");

                    b.HasOne("AudibleDownloader.DAL.Models.Series", "Series")
                        .WithMany("SeriesBooks")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("series_books_ibfk_2");

                    b.Navigation("Book");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.TagsBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("TagsBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tags_books_ibfk_1");

                    b.HasOne("AudibleDownloader.DAL.Models.Tag", "Tag")
                        .WithMany("TagsBooks")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tags_books_ibfk_2");

                    b.Navigation("Book");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersArchivedSeries", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Series", "Series")
                        .WithMany("UsersArchivedSeries")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("users_archived_series_ibfk_2");

                    b.HasOne("AudibleDownloader.DAL.Models.User", "User")
                        .WithMany("UsersArchivedSeries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("users_archived_series_ibfk_1");

                    b.Navigation("Series");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersBook", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.Book", "Book")
                        .WithMany("UsersBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("book_id");

                    b.HasOne("AudibleDownloader.DAL.Models.User", "User")
                        .WithMany("UsersBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_id");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersJob", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.User", "User")
                        .WithMany("UsersJobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("users_jobs_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.UsersToken", b =>
                {
                    b.HasOne("AudibleDownloader.DAL.Models.User", "User")
                        .WithMany("UsersTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("users_tokens_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Author", b =>
                {
                    b.Navigation("AuthorsBooks");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Book", b =>
                {
                    b.Navigation("AuthorsBooks");

                    b.Navigation("CategoriesBooks");

                    b.Navigation("NarratorsBooks");

                    b.Navigation("SeriesBooks");

                    b.Navigation("TagsBooks");

                    b.Navigation("UsersBooks");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Category", b =>
                {
                    b.Navigation("CategoriesBooks");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Narrator", b =>
                {
                    b.Navigation("NarratorsBooks");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Series", b =>
                {
                    b.Navigation("SeriesBooks");

                    b.Navigation("UsersArchivedSeries");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.Tag", b =>
                {
                    b.Navigation("TagsBooks");
                });

            modelBuilder.Entity("AudibleDownloader.DAL.Models.User", b =>
                {
                    b.Navigation("UsersArchivedSeries");

                    b.Navigation("UsersBooks");

                    b.Navigation("UsersJobs");

                    b.Navigation("UsersTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
